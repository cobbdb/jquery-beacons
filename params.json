{"name":"Beacons","tagline":"the jQuery plugin for viewport reactions","body":"[![Beacons](http://i.imgur.com/WVg4Pft.png)](https://cobbdb.github.io/jquery-beacons)\r\n\r\n[![Build Status](https://travis-ci.org/cobbdb/jquery-beacons.svg?branch=master)](https://travis-ci.org/cobbdb/jquery-beacons) [![Bower version](https://badge.fury.io/bo/jquery-beacons.svg)](http://badge.fury.io/bo/jquery-beacons)\r\n\r\nA jQuery plugin to react when elements are in view.\r\n\r\n    $ bower install jquery-beacons\r\n\r\n[![Saucelabs Test Status](https://saucelabs.com/browser-matrix/jquery-beacons.svg?branch=master)](https://saucelabs.com/u/jquery-beacons)\r\n\r\n-------------\r\n## Creating a new beacon\r\nBeacons are page elements you want to act on when they scroll into view.\r\nJust supply a callback function to run when the beacon is triggered.\r\n\r\n    $('.widget').beacon(function () {\r\n        alert('A widget is on screen!');\r\n    });\r\n\r\n#### Convenience variables for your handlers\r\nProvided to the beacon's handler is both the DOM object as well\r\nas the jQuery object.\r\n\r\n    $('.widget').beacon(function (el) {\r\n        // 'el' is the DOM object.\r\n        var pos = el.style.position;\r\n        // 'this' is the jQuery object.\r\n        var color = this.css('background-color');\r\n    });\r\n\r\n#### Bind side-effects dynamically\r\nWhen a beacon activates, it triggers several jQuery events so you can keep your\r\ncode modular.\r\n\r\n    $('#my-widget').\r\n        on('beacon/activate', function () {\r\n            alert('The widget is visible!');\r\n        }).\r\n        on('beacon/scroll/onscreen', function () {\r\n            alert('The widget has come into view!');\r\n        }).\r\n        on('beacon/scroll/offscreen', function () {\r\n            alert('The widget has scrolled out of view!');\r\n        });\r\n\r\n## Beacon options\r\nFor more advanced use cases, there are options available to configure how beacons are triggered.\r\n\r\n    $('.widget').beacon({\r\n        handler: function () {\r\n            alert('A widget is visible!');\r\n        },\r\n        runOnce: true,\r\n        scroll: {\r\n            offscreen: function () {\r\n                alert('The widget is gone now!');\r\n            }\r\n        }\r\n    });\r\n\r\n#### options.handler\r\n* Default: ```noop```\r\n* Type: ```function```\r\n\r\nThe callback to be run when a beacon is activated.\r\n\r\n#### options.runOnce\r\n* Default: ```false```\r\n* Type: ```boolean```\r\n\r\nRemove the beacon automatically after it has been triggered by the handler.\r\n\r\n#### options.scroll.onscreen\r\n* Default: ```noop```\r\n* Type: ```function```\r\n\r\nCallback for when the beacon scrolls on screen. This is triggered only once\r\nwhen the beacon becomes visible, but can trigger multiple times - once for\r\neach time the beacon becomes visible. The `runOnce` option does not apply\r\nto the scroll callbacks. Does not trigger if beacon is disabled.\r\n\r\n#### options.scroll.offscreen\r\n* Default: ```noop```\r\n* Type: ```function```\r\n\r\nCompanion for the `onscreen` callback. This behaves according to the same\r\nrules as `onscreen` except applies to when the beacon scrolls off the viewport\r\ninstead.\r\n\r\n#### options.range\r\n* Default: ```0```\r\n* Type: ```number```\r\n\r\nSet a specific range for this beacon. If no range is provided,\r\nthen it will use the [global range value](#con_global_range).\r\n\r\n#### options.enabled\r\n* Default: ```true```\r\n* Type: ```boolean```\r\n\r\nWhether or not the beacon is active after its creation. See the section on [enabling/disabling beacons](#con_enable) for more information.\r\n\r\n## Beacon controls\r\nFor more complicated scenarios, there are commands to control what your beacons are doing.\r\n\r\n    $('.widget').beacon('disable');\r\n\r\n#### activate\r\nTrip a beacon regardless of if it's viewable or not. This does\r\nnot affect disabled beacons.\r\n\r\n#### destroy\r\nRemove the beacon from the system, but retain the original element.\r\n\r\n#### enable / disable <a name=\"con_enable\"></a>\r\nTurn an individual beacon on or off, but does not destroy it. Disabled beacons cannot\r\nbe tripped manually with `activate`.\r\n\r\n## Global controls\r\nHere are some options to control all your beacons at once.\r\n\r\n    $.beacons({\r\n        range: 150\r\n    });\r\n    $.beacons('enable');\r\n\r\n#### activate\r\nTrip all beacons regardless of if they are viewable or not. This does not\r\naffect disabled beacons.\r\n\r\n#### destroy\r\nRemove all beacons. This does *not* alter the original page element.\r\n\r\n#### enable / disable\r\nTurn all beacons on or off.\r\n\r\n#### fetch\r\n* Returns: ```array```\r\n\r\nReturn the array of all beacons in the system - including disabled beacons.\r\n\r\n#### settings\r\n* Returns: ```object```\r\n\r\nFetch the current system settings.\r\n\r\n#### options.range <a name=\"con_global_range\"></a>\r\n* Default: ```0```\r\n* Type: ```number```\r\n\r\nAn offset in pixels to increase the range outside of the viewport.\r\nFor example, an offset of 100 will trigger beacons 100px above the viewport and 100px below the viewport.\r\n\r\n#### options.throttle\r\n* Default: ```80```\r\n* Type: ```number```\r\n\r\nThe rate at which beacons are inspected. This value is in milliseconds.\r\n\r\n---------\r\n* See: http://plugins.jquery.com/beacons/\r\n* See: http://github.com/cobbdb/jquery-beacons\r\n* License: MIT\r\n","google":"UA-50240363-3","note":"Don't delete this file! It's used internally to help with page regeneration."}